version: 2.1


references:

working_directory: &working_directory
  /home/circleci/gitRoot/

repo_cache_key: &repo_cache_key
  v1-repo-{{ .Branch }}-{{ .Revision }}

# Step to restore repository from cache
restore_repo: &restore_repo
  restore_cache:
    key: *repo_cache_key

save_repo: &save_repo
  save_cache:
    key: *repo_cache_key
    paths:
        - *working_directory

jobs: 

  # core job
  build_test_project:

    # assign the working directory
    working_directory: *working_directory
        
    # run the steps with Docker as the primary container
    # job commands run in this container
    docker: # run the steps with Docker
      - image: circleci/python:3.7

    # env var assignments
    # env var assignment section
    environment:
        PIPENV_VENV_IN_PROJECT: true  

    # steps the core build test job
    steps:

      # check out source code to working directory
      - checkout
      # restore the saved cache after the first run or if `pom.xml` has changed
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
      - *restore_repo
      # changing ownership
      - run:
          name: Assigning vars for Git
          command: export EMAIL=circleci@circleci.com && export GIT_AUTHOR_NAME=CircleCi && export GIT_COMMITTER_NAME=CircleCi
          

      - run:
          name: Initializing.....
          command: |
            sudo python -m pip install --upgrade pip  
            sudo pip install --upgrade pip 
            sudo pip install pipenv 
            sudo pipenv install 
            sudo pipenv install Django==2.2 
            sudo pipenv install pytest-django 
      

      - run:
          name: Building with testing.....
          command: |
            [ $EUID == 0 ] && SUDO=" || SUDO=sudo && $SUDO chown -R circleci:circleci /usr/local/bin 
            [ $EUID == 0 ] && SUDO=" || SUDO=sudo && $SUDO chown -R circleci:circleci /usr/local/lib/python3.7/site-packages 
            sudo pipenv run pytest --junitxml=test-results/junit.xml djangodemo/tests 
            sudo python djangodemo/setup.py sdist 
      # cache the entire project 
      - *save_repo
      # Upload test results for display in Test Summary:
      # https://circleci.com/docs/2.0/collect-test-data/
      - store_test_results: 
          path: test-results
      # Upload test summary for display in Artifacts: 
      # https://circleci.com/docs/2.0/artifacts/
      - store_artifacts:
          path: test-results
          destination: tr1


  docker_build:
    # assign the working directory
    working_directory: *working_directory

    docker: # run the steps with Docker, this image is not used and therefore ignored
      - image: circleci/python:3.7  
      
    steps:
      - *restore_repo
      - setup_remote_docker
      - run:
          name: creating docker image..considering using env vars DOCKER_USER and DOCKER_PASS
          command: |
            docker login --username tylertravismya --password 69cutlass 
            docker build -t theharbormaster/django-demo:latest -f Dockerfile .
            docker push theharbormaster/django-demo:latest

# a workflow to build out the environment
workflows:
  build_test_deploy_workflow:
    jobs:
      - build_test_project
      - docker_build:
          requires:
            - build_test_project
